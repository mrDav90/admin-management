name: admin-management
services:
  #admin_management_app:
  #  build:
  #    context: ../../..
  #    dockerfile: Dockerfile
  #  container_name: admin_management_app
  #  environment:
  #    DB_HOST: admin_management_db
  #    DB_NAME: admin_management_db
  #    DB_USERNAME: admin
  #    DB_PASSWORD: admin
  #    DB_PORT: 3306
  #  ports:
  #    - "8085:8085"
  #  depends_on:
  #    admin_management_db:
  #      condition: service_healthy
  #  restart: unless-stopped


  admin_management_db:
    image: mysql
    container_name: admin_management_db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: admin_management_db
      MYSQL_USER: admin
      MYSQL_PASSWORD: admin
    ports:
      - "3307:3306"
    volumes:
      - admin_management_mysql_data:/var/lib/mysql
    healthcheck:
      test: mysqladmin ping -h 127.0.0.1 -u $$MYSQL_USER --password=$$MYSQL_PASSWORD
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s


  keycloak_database:
    image: postgres:15
    container_name: keycloak_database
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped


  keycloak:
    image: quay.io/keycloak/keycloak:26.0.8
    container_name: keycloak_server
    environment:
      KC_DB: postgres
      KC_DB_URL_HOST: keycloak_database
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
      KC_HOSTNAME: localhost
      KC_HTTP_ENABLED: "true"
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_FEATURES: scripts
    command: [ "start-dev", "--import-realm", "--verbose" ]
    volumes:
      - ./realm-config:/opt/keycloak/data/import
    ports:
      - 9080:8080
    depends_on:
      keycloak_database:
        condition: service_healthy

volumes:
  admin_management_mysql_data:
    driver: local
  postgres_data:
    driver: local